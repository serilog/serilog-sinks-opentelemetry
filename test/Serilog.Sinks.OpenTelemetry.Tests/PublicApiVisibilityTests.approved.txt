namespace Serilog
{
    public static class OpenTelemetryLoggerConfigurationExtensions
    {
        public static Serilog.LoggerConfiguration OpenTelemetry(this Serilog.Configuration.LoggerAuditSinkConfiguration loggerAuditSinkConfiguration, System.Action<Serilog.Sinks.OpenTelemetry.OpenTelemetrySinkOptions> configure) { }
        public static Serilog.LoggerConfiguration OpenTelemetry(this Serilog.Configuration.LoggerSinkConfiguration loggerSinkConfiguration, System.Action<Serilog.Sinks.OpenTelemetry.BatchedOpenTelemetrySinkOptions> configure, bool ignoreEnvironment = false) { }
        public static Serilog.LoggerConfiguration OpenTelemetry(this Serilog.Configuration.LoggerAuditSinkConfiguration loggerAuditSinkConfiguration, string endpoint = "http://localhost:4317", Serilog.Sinks.OpenTelemetry.OtlpProtocol protocol = 0, System.Collections.Generic.IDictionary<string, string>? headers = null, System.Collections.Generic.IDictionary<string, object>? resourceAttributes = null, Serilog.Sinks.OpenTelemetry.IncludedData? includedData = default) { }
        public static Serilog.LoggerConfiguration OpenTelemetry(this Serilog.Configuration.LoggerSinkConfiguration loggerSinkConfiguration, string endpoint = "http://localhost:4317", Serilog.Sinks.OpenTelemetry.OtlpProtocol protocol = 0, System.Collections.Generic.IDictionary<string, string>? headers = null, System.Collections.Generic.IDictionary<string, object>? resourceAttributes = null, Serilog.Sinks.OpenTelemetry.IncludedData? includedData = default, Serilog.Events.LogEventLevel restrictedToMinimumLevel = 0, Serilog.Core.LoggingLevelSwitch? levelSwitch = null) { }
    }
}
namespace Serilog.Sinks.OpenTelemetry
{
    public class BatchedOpenTelemetrySinkOptions : Serilog.Sinks.OpenTelemetry.OpenTelemetrySinkOptions
    {
        public BatchedOpenTelemetrySinkOptions() { }
        public Serilog.Configuration.BatchingOptions BatchingOptions { get; }
    }
    [System.Flags]
    public enum IncludedData
    {
        None = 0,
        MessageTemplateTextAttribute = 1,
        MessageTemplateMD5HashAttribute = 2,
        TraceIdField = 4,
        SpanIdField = 8,
        SpecRequiredResourceAttributes = 16,
        TemplateBody = 32,
        MessageTemplateRenderingsAttribute = 64,
        SourceContextAttribute = 128,
    }
    public class OpenTelemetrySinkOptions
    {
        public OpenTelemetrySinkOptions() { }
        public string? Endpoint { get; set; }
        public System.IFormatProvider? FormatProvider { get; set; }
        public System.Collections.Generic.IDictionary<string, string> Headers { get; set; }
        public System.Net.Http.HttpMessageHandler? HttpMessageHandler { get; set; }
        public Serilog.Sinks.OpenTelemetry.IncludedData IncludedData { get; set; }
        public Serilog.Core.LoggingLevelSwitch? LevelSwitch { get; set; }
        public string? LogsEndpoint { get; set; }
        public Serilog.Sinks.OpenTelemetry.OtlpProtocol Protocol { get; set; }
        public System.Collections.Generic.IDictionary<string, object> ResourceAttributes { get; set; }
        public Serilog.Events.LogEventLevel RestrictedToMinimumLevel { get; set; }
        public string? TracesEndpoint { get; set; }
    }
    public enum OtlpProtocol
    {
        Grpc = 0,
        HttpProtobuf = 1,
    }
}